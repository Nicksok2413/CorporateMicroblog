# Конфигурационный файл Alembic

[alembic]
# Путь к директории с миграциями относительно этого файла
script_location = migrations

# Шаблон имени файла для новых миграций
# Доступные переменные: %(rev)s, %(slug)s, %(year)d, %(month).2d, %(day).2d, %(hour).2d, %(minute).2d, %(second).2d
file_template = %%(rev)s_%%(slug)s

# Кодировка файлов миграций
# encoding = utf-8

# URL для подключения к базе данных.
# Alembic будет использовать эту переменную.
# Рекомендуется использовать переменную окружения.
# Замените ее на ваш реальный URL или используйте переменную окружения
# sqlalchemy.url = postgresql://user:password@host:port/database
# Используем переменную окружения DATABASE_URL_ALEMBIC (или просто DATABASE_URL, если он подходит)
# Важно: Alembic по умолчанию работает СИНХРОННО, поэтому URL должен быть для синхронного драйвера (psycopg2)!
# Наш env.py адаптирует его для асинхронной проверки, но для самого Alembic нужен синхронный.
# Создадим переменную окружения для Alembic в .env
# DATABASE_URL_ALEMBIC=postgresql://microblog_user:secure_password_CHANGE_ME@db:5432/microblog_db
sqlalchemy.url = ${DATABASE_URL_ALEMBIC}


[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%H:%%M:%%S

```
Важное замечание по alembic.ini: Alembic часто требует синхронный URL для своей работы.
Мы добавили переменную DATABASE_URL_ALEMBIC в .env.example и используем ее здесь.
Убедитесь, что в вашем реальном .env файле она установлена правильно для синхронного драйвера (например, postgresql://..., а не postgresql+asyncpg://...).
Ваш migrations/env.py должен уметь работать с этим URL.
```